plugins {
    id 'groovy'
    id 'java'
}

group 'org.cisecurity'
version '0.0.3'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://repo.spring.io/plugins-release/"
    }
}

def groovyVersion = "3.0.5"
dependencies {
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy
    compile group: 'org.codehaus.groovy', name: 'groovy', version: groovyVersion
    compile group: 'org.codehaus.groovy', name: 'groovy-xml', version: groovyVersion
    compile group: 'org.codehaus.groovy', name: 'groovy-json', version: groovyVersion
    compile group: 'org.codehaus.groovy', name: 'groovy-dateutil', version: groovyVersion
    compile group: 'org.codehaus.groovy', name: 'groovy-cli-picocli', version: groovyVersion
    compile group: 'org.codehaus.groovy', name: 'groovy-cli-commons', version: groovyVersion

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'

    // https://mvnrepository.com/artifact/com.opendxl/dxlclient
    compile group: 'com.opendxl', name: 'dxlclient', version: '0.2.5'

    // https://mvnrepository.com/artifact/io.github.http-builder-ng/http-builder-ng-core
    compile group: 'io.github.http-builder-ng', name: 'http-builder-ng-core', version: '1.0.4'

    // https://mvnrepository.com/artifact/io.github.http-builder-ng/http-builder-ng-okhttp
    compile group: 'io.github.http-builder-ng', name: 'http-builder-ng-okhttp', version: '1.0.4'

    testCompile group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/org.spockframework/spock-core
    testCompile group: 'org.spockframework', name: 'spock-core', version: '2.0-M2-groovy-3.0'
}

jar () {
    archiveFileName = "optimus-subscriber.jar"
    doFirst {
        manifest {
            attributes (
                "Implementation-Title": "Optimus Content Subscriber",
                "Implementation-Version": "${version}",
                "Build-Date": new Date().format("MM/dd/yyyy HH:mm aa"),
                "Main-Class": "org.cisecurity.content.Application",
                "Class-Path": configurations.compile.collect { "lib/${it.getName()}" }.join(' ')
            )
        }
    }
}

assemble {
    doLast {
        configurations.compile.collect().each { c ->
            ant.copy(toDir: "./release/lib", verbose: true) {
                fileset(file: c.canonicalPath)
            }
        }

        copy {
            from ("./build/libs") {
                include "optimus-subscriber.jar"
            }
            into "./release"
        }

        copy {
            from (".") {
                include "OptimusSubscriber.bat"
                include "OptimusSubscriber.sh"
            }
            into "./release"
        }

        println "Zipping output bundle..."

        // Zip the output folder
        ant.zip(destfile: "./dist/optimus-subscriber-v${version}.zip",
            basedir: "./release",
            includes: "*/**")
    }
}